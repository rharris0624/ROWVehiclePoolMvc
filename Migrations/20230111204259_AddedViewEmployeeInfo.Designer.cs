// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RowVehiclePoolMVC.Context;

namespace RowVehiclePoolMVC.Migrations
{
    [DbContext(typeof(RvpAppContext))]
    [Migration("20230111204259_AddedViewEmployeeInfo")]
    partial class AddedViewEmployeeInfo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RowVehiclePoolMVC.Models.InterfaceErrorLogging", b =>
                {
                    b.Property<int>("ErrorCode")
                        .HasColumnName("Error Code")
                        .HasColumnType("int");

                    b.Property<string>("ErrorMessage")
                        .HasColumnName("Error Message")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime");

                    b.ToTable("InterfaceErrorLogging");
                });

            modelBuilder.Entity("RowVehiclePoolMVC.Models.Vehicle", b =>
                {
                    b.Property<string>("TagNumber")
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<decimal?>("Mileage")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<DateTime?>("OutOfServiceBegin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("OutOfServiceEnd")
                        .HasColumnType("datetime");

                    b.Property<string>("OwnerBudget")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal>("VehYear")
                        .HasColumnType("numeric(4, 0)");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("TagNumber");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("RowVehiclePoolMVC.Models.VehicleAssignment", b =>
                {
                    b.Property<int>("VehReqNo")
                        .HasColumnType("int");

                    b.Property<decimal>("AssignNo")
                        .HasColumnType("decimal(5, 0)");

                    b.Property<DateTime>("AssignDepartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("AssignReturnDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AssignTagNo")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("VehReqNo", "AssignNo");

                    b.HasIndex("VehReqNo")
                        .IsUnique()
                        .HasName("IX_VehicleAssignment");

                    b.HasIndex("VehReqNo", "AssignNo", "Comments", "AssignTagNo", "AssignDepartDate", "AssignReturnDate")
                        .HasName("NonClusteredIndex-20170815-094707");

                    b.ToTable("VehicleAssignment");
                });

            modelBuilder.Entity("RowVehiclePoolMVC.Models.VehicleFunction", b =>
                {
                    b.Property<string>("Func")
                        .HasColumnName("FUNC")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("FunctionDesc")
                        .HasColumnName("FUNCTION_DESC")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Func");

                    b.ToTable("VehicleFunction");
                });

            modelBuilder.Entity("RowVehiclePoolMVC.Models.VehicleRequisition", b =>
                {
                    b.Property<int>("VehReqNo")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Duties")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmailAddress")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastChangeUserid")
                        .HasColumnType("char(7)")
                        .IsFixedLength(true)
                        .HasMaxLength(7)
                        .IsUnicode(false);

                    b.Property<decimal>("NoInParty")
                        .HasColumnType("decimal(2, 0)");

                    b.Property<string>("NotificationDivHead")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("NotificationMan")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ReqBudget")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("ReqComments")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("ReqDepartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ReqDivision")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ReqFap")
                        .IsRequired()
                        .HasColumnName("ReqFAP")
                        .HasColumnType("char(11)")
                        .IsFixedLength(true)
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<string>("ReqFunction")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("ReqJobNo")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<DateTime>("ReqReturnDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ReqSectionId")
                        .IsRequired()
                        .HasColumnName("ReqSectionID")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("Requestor")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Userid")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<DateTime>("VehReqDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VehReqStatus")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("VehType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("VehReqNo");

                    b.ToTable("VehicleRequisition");
                });

            modelBuilder.Entity("RowVehiclePoolMVC.Models.vwEmployeeInfo", b =>
                {
                    b.Property<string>("EMPLOYEE_NUMBER")
                        .HasColumnName("EMPLOYEE_NUMBER")
                        .HasColumnType("varchar(9)")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("ITEM")
                        .HasColumnName("ITEM")
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("JOB_TITLE")
                        .HasColumnName("JOB_TITLE")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("NAME_FIRST")
                        .HasColumnName("FIRST_NAME")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("NAME_LAST")
                        .HasColumnName("NAME_LAST")
                        .HasColumnType("varchar(27)")
                        .HasMaxLength(27)
                        .IsUnicode(false);

                    b.Property<string>("SECTION_ID")
                        .HasColumnName("SECTION_ID")
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("SectionDesc")
                        .HasColumnName("SectionDesc")
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.ToTable("vwEmployeeInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
